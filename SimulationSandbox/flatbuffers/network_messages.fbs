// network_messages.fbs
namespace NetworkSim;

table Vec3 {
  x: float;
  y: float;
  z: float;
}

table ObjectUpdate {
  objectId: int;
  position: Vec3;
  rotation: Vec3;
  velocity: Vec3;
  scale:Vec3;
  owner: int;
}

table ScenarioChange {
  scenarioId:int = -1;
}

table GlobalState {
  // Corresponds to std::atomic<bool> isPaused;
  is_paused:bool;

  // Corresponds to std::atomic<int> gravityEnabled;
  gravity_enabled:int;

  // Corresponds to std::atomic<float> gravityY;
  gravity_y:float;

  elasticity:float;
  staticFriction:float;
  dynamicFriction:float;

  // Corresponds to target frequency globals
  target_sim_freq:float;
  target_net_freq:float;
}

table PeerAnnounce {
  peerId:int;
  port:int;
}

union MessageData {
  ObjectUpdate,
  GlobalState,
  PeerAnnounce,
  ScenarioChange
}

table Message {
  timestamp: ulong;
  data: MessageData;
}

root_type Message;